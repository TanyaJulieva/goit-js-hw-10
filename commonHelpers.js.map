{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst elements = {\n  btnStart: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nelements.btnStart.disabled = true;\nelements.input.disabled = false;\n\nconst currentDate = new Date().getTime();\nlet userSelectedDate;\nlet intervalID;\n\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    let ms = userSelectedDate - currentDate;\n\n    if (ms < 0) {\n        elements.btnStart.disabled = true;\n      iziToast.show({\n        message: 'Please choose a date in the future',\n      });\n      return\n    };\n    elements.btnStart.disabled = false;\n    elements.btnStart.addEventListener('click', handlerClick)\n  },\n};\n\nflatpickr(elements.input, options);\n\n\n\nfunction handlerClick() {\n    // if (intervalId) {\n    //     clearInterval(intervalId);\n    //   }\n\n    elements.btnStart.disabled = true;\n    elements.input.disabled = true;\n\n    userSelectedDate = new Date(elements.input.value).getTime();\n    let ms = userSelectedDate - currentDate;\n    console.log(currentDate);\n    \n\n    intervalID = setInterval(()=> {\n        ms -= 1000;\n        elements.seconds.textContent = addLeadingZero(convertMs(ms).seconds);\n        elements.minutes.textContent = addLeadingZero(convertMs(ms).minutes);\n        elements.hours.textContent = addLeadingZero(convertMs(ms).hours);\n        elements.days.textContent = addLeadingZero(convertMs(ms).days);\n    } , 1000)\n    \n};\n\n  function addLeadingZero(number) {\n    return ('0' + number).slice(-2);\n  }\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    \n    const days = Math.floor(ms / day);\n   \n    const hours = Math.floor((ms % day) / hour);\n   \n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    \n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  "],"names":["elements","currentDate","userSelectedDate","options","selectedDates","iziToast","handlerClick","flatpickr","ms","addLeadingZero","convertMs","number","days","hours","minutes","seconds"],"mappings":"6vBAKA,MAAMA,EAAW,CACf,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAA,EAAS,SAAS,SAAW,GAC7BA,EAAS,MAAM,SAAW,GAE1B,MAAMC,EAAc,IAAI,OAAO,UAC/B,IAAIC,EAKJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAIrB,GAHAF,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAClCF,EAAmBD,EAEnB,EAAG,CACRD,EAAS,SAAS,SAAW,GAC/BK,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAO,EACD,MAEN,CAAIL,EAAS,SAAS,SAAW,GAC7BA,EAAS,SAAS,iBAAiB,QAASM,CAAY,CACzD,CACH,EAEAC,EAAUP,EAAS,MAAOG,CAAO,EAIjC,SAASG,GAAe,CAKpBN,EAAS,SAAS,SAAW,GAC7BA,EAAS,MAAM,SAAW,GAE1BE,EAAmB,IAAI,KAAKF,EAAS,MAAM,KAAK,EAAE,UAClD,IAAIQ,EAAKN,EAAmBD,EAC5B,QAAQ,IAAIA,CAAW,EAGV,YAAY,IAAK,CAC1BO,GAAM,IACNR,EAAS,QAAQ,YAAcS,EAAeC,EAAUF,CAAE,EAAE,OAAO,EACnER,EAAS,QAAQ,YAAcS,EAAeC,EAAUF,CAAE,EAAE,OAAO,EACnER,EAAS,MAAM,YAAcS,EAAeC,EAAUF,CAAE,EAAE,KAAK,EAC/DR,EAAS,KAAK,YAAcS,EAAeC,EAAUF,CAAE,EAAE,IAAI,CAChE,EAAG,GAAI,CAEZ,CAEE,SAASC,EAAeE,EAAQ,CAC9B,OAAQ,IAAMA,GAAQ,MAAM,EAAE,CAC/B,CAEH,SAASD,EAAUF,EAAI,CAOnB,MAAMI,EAAO,KAAK,MAAMJ,EAAK,KAAG,EAE1BK,EAAQ,KAAK,MAAOL,EAAK,MAAO,IAAI,EAEpCM,EAAU,KAAK,MAAQN,EAAK,MAAO,KAAQ,GAAM,EAEjDO,EAAU,KAAK,MAASP,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}